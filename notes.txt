Ideas for further work:
3. how does age of author factor in?
4. look up paper about relevant marriage stuff-- do you take your partner's last name?
5. look up paper about authors listed alphabetically

Ideas for this work:
* Focus on showing the effect over time
  * Other work either paints a bleak picture of the state of things over time, or fails to capture the full picture of bias. Probably don't say this in the writeup.
* Show the effect across geographies
  * Analysis: The effect by country for the past 5 years.
    * If all researchers are from universities within a single country, use that.
* Include patents, journal articles and book chapters
  * What other kinds of data are available in the mongo dataset?
* Metric(?): probability of first vs obscure (non-last) authorship.
  * Stats: this probability, by sex, per year, with a binomial confidence interval
* Analysis: strength of effect vs number of authors on the paper.


Ideas for the writeup:
* I'm expanding to book chapters and patents
* The "base rates" problem-- it's less convincing to say that a bias exists in academia if you don't account for the different rates of men and women entering academia and working on projects that end up being published. Most existing work does not account for the base rates problem.
  * The base rates problem fails to account for the effect of changing gender representation in academia over time.
    * My approach may actually also have this problem
  * The base rates problem fails to show pure bias, because it doesn't account for the proportion of men and women in academia to begin with.
* Point out that little work exists to look at the effect over time. And where it does exist, it usually hits the base rate problem. Or in the case of that one good PLOS paper, the results don't quite match my own.


Data description for patents data in Postgres:
* rawinventor and pct_data downloaded from USPTO's website patentsview.org:
  http://www.patentsview.org/download/
* pct_data
  * total count = 1,146,846
  * patent_id -- used to relate to rawinventor
  * date -- date patent was published or filed
    * there starts to be data for every year beginning with 1980
  * doc_type -- whether the document has been published or just filed
    * can be pct_application or wo_grant
    * let's limit to pct_application
      * count reduces to 551,818
  * country -- country of filing
* rawinventor
  * total count = 15,334,570
  * patent_id -- used to relate to pct_data
  * name_first -- first name of author
  * sequence -- order in which author appears in filing
    * Verified this is correct by looking up several patents on US govt site


Data description for Crossref data in mongo:
* Key 'author' has a list of authors.
  * For each one, there might be
    1. An affiliation, under 'affiliation'
    2. A last name, under 'family'
    3. A first name, under 'given'
      - These are often just abbreviations
* Key 'issued' has the earliest known publication date, whether online or in print
* Key 'published-print' has the in-print publication date
* Key 'published-online' has the online publication date
* Key 'container-title' has the "Work container title, such as journal title, or book title"
* Key 'publisher' contains a higher level publisher info than 'container-title'
* Key 'subject' has info about the subject of the paper
* Key 'title' has the title of the work
* Key 'type' is 'journal-article' or 'book-chapter'


Old notes/Done:

One possible strategy to tag everything:

1. Get a cursor to point at all records that don't have the field "author-genders"
2. Loop through the cursor and pull author names list
3. Analyze first name for each author, and add result to "author-genders" list
  - Result should be non-binary
    * Male, mostly-male, mostly-female, female, unknown-estimation_failure,
      unknown-no_first_name, unknown-too_short_or_initials, unknown-code_failure
4. Query to get all "author-genders" lists

# Organize dataset forÂ some analysis.
- I need to get the count of each author-gender in each authorship position,
  by month and by topic.
  * One possible approach:
    1. Index by date and pub type (DONE)
    2. Write author lists for each month/topic into a separate file.
      - Organize folders: month_year > topic
      - QUERY (replace date/month):
      {'$and' :
        [
          {'author-genders' : {'$exists' : true}},
          {'type' : 'journal-article'},
          {'issued.date-parts.0.0' : 1990},
          {'issued.date-parts.0.1' : 1}
        ]
      }, {'author-genders' : 1, 'subject' : 1})
